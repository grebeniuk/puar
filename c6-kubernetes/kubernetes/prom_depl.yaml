# kubectl create namespace prom
# kubectl apply -f prom_depl.yaml -n prom
# kubectl port-forward prom-book-deployment-... 3000:3080
# https://devopscube.com/node-exporter-kubernetes/
# https://stackoverflow.com/questions/67151953/forbidden-resource-in-api-group-at-the-cluster-scope
# https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config
# https://github.com/prometheus/prometheus/issues/5976#issuecomment-881910837
# https://grafana.com/docs/grafana/latest/setup-grafana/installation/kubernetes/
# http://localhost:8001/api/v1/namespaces/prom/services/prometheus:https/proxy/
# Secret config: https://github.com/prometheus/prometheus/blob/main/documentation/examples/rbac-setup.yml
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-prom
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: /lab-prom/volumes/prom
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-grafana
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /lab-prom/volumes/grafana
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-prom
spec:
  volumeName: pv-prom
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-grafana
spec:
  volumeName: pv-grafana
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prom-book-deployment
spec:
  selector:
    matchLabels:
      app: prom-app
  replicas: 1
  template:
    metadata:
      labels:
        app: prom-app
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:9.1.6
        securityContext:
          runAsUser: 472
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: grafana-storage-volume
          mountPath: /var/lib/grafana
      - name: prometheus
        image: prom/prometheus:latest
        securityContext:
          runAsUser: 65534
        ports:
        - containerPort: 9090
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: prom-config-volume
          mountPath: /etc/prometheus
        - name: prom-storage-volume
          mountPath: /prometheus
      volumes:
      - name: prom-storage-volume
        persistentVolumeClaim:
          claimName: pvc-prom
      - name: grafana-storage-volume
        persistentVolumeClaim:
          claimName: pvc-grafana
      - name: prom-config-volume
        configMap:
          defaultMode: 420
          name: prometheus-server-conf
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: node-exporter
  name: node-exporter
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/name: node-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/name: node-exporter
    spec:
      containers:
      - args:
        - --path.sysfs=/host/sys
        - --path.rootfs=/host/root
        - --no-collector.wifi
        - --no-collector.hwmon
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
        - --collector.netclass.ignored-devices=^(veth.*)$
        name: node-exporter
        image: prom/node-exporter
        ports:
          - containerPort: 9100
            protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 180Mi
          requests:
            cpu: 102m
            memory: 180Mi
        volumeMounts:
        - mountPath: /host/sys
          mountPropagation: HostToContainer
          name: sys
          readOnly: true
        - mountPath: /host/root
          mountPropagation: HostToContainer
          name: root
          readOnly: true
      volumes:
      - hostPath:
          path: /sys
        name: sys
      - hostPath:
          path: /
        name: root
---
kind: Service
apiVersion: v1
metadata:
  name: node-exporter
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9100'
spec:
  selector:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/name: node-exporter
  ports:
  - name: node-exporter
    protocol: TCP
    port: 9100
    targetPort: 9100
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: ["", "extensions"]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - endpointslice
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: default
  namespace: prom
---
# http://localhost:8001/api/v1/namespaces/prom/services/prometheus:9090/proxy/
kind: Service
apiVersion: v1
metadata:
  name: prometheus
spec:
  selector:
    app: prom-app
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090